services:
  # Proxy Inverso - Nginx
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "3000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - eventos-service
      - auth-service
      - pagos-service
      # - notificaciones-service
    networks:
      - microservices_network

  # Frontend
  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3001:3000"
    networks:
      - microservices_network

  # Servicio de Autenticación
  auth-service:
    build:
      context: ./Auth
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "4000:4000"
    environment:
      - MYSQL_HOST=mysql-db
      - MYSQL_DB=auth_db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root123
    depends_on:
      - mysql-db
    networks:
      - microservices_network

  # Servicio de Eventos
  eventos-service:
    build:
      context: ./Eventos
      dockerfile: Dockerfile
    container_name: eventos-service
    ports:
      - "4001:4001"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=server=mysql-db;port=3306;database=eventos_db;user=root;password=root123
      - Jwt__Key=cb2e2dedeef58d11183f2aa2f769abf5255298225403f80322f3bcfe54a41aa3
      - Jwt__Issuer=eventos-api
      - Jwt__Audience=eventos-client
    depends_on:
      - mysql-db
    networks:
      - microservices_network

  # Servicio de Pagos
  pagos-service:
    build:
      context: ./Pagos
      dockerfile: Dockerfile
    container_name: pagos-service
    ports:
      - "4002:4002"
    environment:
      - DB_HOST=mysql-db
      - DB_NAME=pagos_db
      - DB_USER=root
      - DB_PASSWORD=root123
      - RAILS_ENV=development
      - PORT=4002
    depends_on:
      - mysql-db
    networks:
      - microservices_network

  # Servicio de Notificaciones
  notificaciones-service:
    build:
      context: ./Notificaciones
      dockerfile: Dockerfile
    container_name: notificaciones-service
    ports:
      - "4003:4003"
    environment:
      - DB_HOST=mysql-db
      - DB_NAME=notificaciones_db
      - DB_USER=root
      - DB_PASSWORD=root123
      - RAILS_ENV=development
      - PORT=4003
    depends_on:
      - mysql-db
    networks:
      - microservices_network

  # Único contenedor MySQL compartido
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: root123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - microservices_network

  # PhpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - mysql-db
    ports:
      - "8080:80"
    environment:
      PMA_HOST: mysql-db
      PMA_USER: root
      PMA_PASSWORD: root123
    networks:
      - microservices_network

volumes:
  mysql_data:

networks:
  microservices_network:
    driver: bridge
